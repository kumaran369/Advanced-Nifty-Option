name: Daily Trading

on:
  schedule:
    # Run Monday to Friday at 9:20 AM IST (3:50 AM UTC)
    # Note: GitHub Actions runs on UTC time
    # IST = UTC + 5:30, so 9:20 AM IST = 3:50 AM UTC
    - cron: '50 3 * * 1-5'
  
  workflow_dispatch:  # Allow manual trigger
    inputs:
      debug_mode:
        description: 'Run in debug mode'
        required: false
        default: 'false'

jobs:
  trading:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          pip install upstox-python-sdk numpy pandas scipy requests
      
      - name: Create token file
        run: |
          echo "${{ secrets.UPSTOX_ACCESS_TOKEN }}" > token.txt
      
      - name: Create logs directory
        run: |
          mkdir -p logs
      
      - name: Run trading bot
        id: trading
        run: |
          # Set IST timezone
          export TZ='Asia/Kolkata'
          echo "Current IST time: $(date)"
          python -u main.py
        timeout-minutes: 390  # 6.5 hours (market hours)
        env:
          GITHUB_ACTIONS: 'true'  # Ensures proper logging for CI
          PYTHONUNBUFFERED: '1'  # Force unbuffered output
          TZ: 'Asia/Kolkata'  # Set timezone to IST
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}  # Discord webhook
      
      - name: Generate trading report
        if: always()
        run: |
          echo "## ðŸ“Š Trading Session Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date**: $(date +'%Y-%m-%d')" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Extract summary from logs
          if [ -f logs/trading_*.log ]; then
            echo "### Session Summary" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            tail -20 logs/trading_*.log | grep -E "(TRADING SESSION SUMMARY|Total Signals|Daily P&L|Duration)" || echo "No summary found"
            echo '```' >> $GITHUB_STEP_SUMMARY
            
            echo "### Trade Entries" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            grep -A 15 "NEW TRADE SIGNAL" logs/trading_*.log | tail -45 || echo "No trades executed"
            echo '```' >> $GITHUB_STEP_SUMMARY
            
            echo "### Position Closures" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            grep -A 7 "POSITION CLOSED" logs/trading_*.log | tail -40 || echo "No positions closed"
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trading-logs-${{ github.run_number }}
          path: logs/
          retention-days: 30
      
      - name: Upload trading report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trading-report-${{ github.run_number }}
          path: |
            logs/trading_*.log
            ${{ github.workspace }}/job_summary.md
          retention-days: 90
      
      - name: Send notification (Optional)
        if: always()
        continue-on-error: true
        run: |
          # Extract P&L from logs
          if [ -f logs/trading_*.log ]; then
            PNL=$(grep "Final Daily P&L" logs/trading_*.log | tail -1 | grep -oE "[+-]?[0-9,]+")
            SIGNALS=$(grep "Total Signals Generated" logs/trading_*.log | tail -1 | grep -oE "[0-9]+")
            
            echo "Daily P&L: â‚¹${PNL:-0}"
            echo "Total Signals: ${SIGNALS:-0}"
            
            # Add webhook notification here if needed
            # Example: Discord, Slack, Telegram webhook
            # curl -X POST "YOUR_WEBHOOK_URL" \
            #   -H "Content-Type: application/json" \
            #   -d "{\"content\":\"Trading Session Complete\\nP&L: â‚¹${PNL}\\nSignals: ${SIGNALS}\"}"
          fi
      
      - name: Clean up sensitive data
        if: always()
        run: |
          rm -f token.txt